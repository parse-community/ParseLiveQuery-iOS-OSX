name: ci
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  CI_XCODE_VER: '/Applications/Xcode_11.7.app/Contents/Developer'

jobs:
  ios:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Submodules
      run: |
        git submodule update --init --recursive
    - name: Build-Test
      run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild build -workspace ParseLiveQuery.xcworkspace -sdk iphonesimulator -scheme ParseLiveQuery-iOS -configuration Debug -destination "platform=iOS Simulator,name=iPhone 11" GCC_INSTRUMENT_PROGRAM_FLOW_ARCS=YES GCC_GENERATE_TEST_COVERAGE_FILES=YES | xcpretty -c
    - name: Send codecov
      run: bash <(curl https://codecov.io/bash)
      
  macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Submodules
      run: |
        git submodule update --init --recursive
    - name: Build-Test
      run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild build -workspace ParseLiveQuery.xcworkspace -sdk macosx -scheme ParseLiveQuery-OSX -configuration Debug GCC_INSTRUMENT_PROGRAM_FLOW_ARCS=YES GCC_GENERATE_TEST_COVERAGE_FILES=YES | xcpretty -c
    - name: Send codecov
      run: bash <(curl https://codecov.io/bash)

  tvos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Submodules
      run: |
        git submodule update --init --recursive
    - name: Build-Test
      run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild build -workspace ParseLiveQuery.xcworkspace -scheme ParseLiveQuery-tvOS -configuration Debug GCC_INSTRUMENT_PROGRAM_FLOW_ARCS=YES GCC_GENERATE_TEST_COVERAGE_FILES=YES | xcpretty -c
    - name: Send codecov
      run: bash <(curl https://codecov.io/bash)

  watchos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Submodules
      run: |
        git submodule update --init --recursive
    - name: Build
      run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild build -workspace ParseLiveQuery.xcworkspace -scheme ParseLiveQuery-watchOS -configuration Debug GCC_INSTRUMENT_PROGRAM_FLOW_ARCS=YES GCC_GENERATE_TEST_COVERAGE_FILES=YES | xcpretty -c
    - name: Send codecov
      run: bash <(curl https://codecov.io/bash)

  demo-swift:
    needs: ios
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Submodules
      run: |
        git submodule update --init --recursive
    - name: Clean
      run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild clean -workspace ParseLiveQuery.xcworkspace -scheme LiveQueryDemo | xcpretty -c
    - name: Build
      run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild build -workspace ParseLiveQuery.xcworkspace -scheme LiveQueryDemo -configuration Debug | xcpretty -c
    - name: Send codecov
      run: bash <(curl https://codecov.io/bash)

  demo-objective-c:
    needs: ios
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Submodules
      run: |
        git submodule update --init --recursive
    - name: Clean
      run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild clean -workspace ParseLiveQuery.xcworkspace -scheme LiveQueryDemo-ObjC | xcpretty -c
    - name: Build
      run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild build -workspace ParseLiveQuery.xcworkspace -scheme LiveQueryDemo-ObjC -configuration Debug | xcpretty -c
    - name: Send codecov
      run: bash <(curl https://codecov.io/bash)

  cocoapods:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: CocoaPods
        run: set -o pipefail && env NSUnbufferedIO=YES pod lib lint --allow-warnings --verbose

  docs:
    needs: ios
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache Gems
        id: cache-gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-
      - name: Install Bundle
        run: |
          bundle config path vendor/bundle
          bundle install
      - name: Create Jazzy Docs
        run: |
          ./jazzy.sh
